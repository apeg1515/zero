{
    "asi"           : false,     //Tolerate Automatic Semicolon Insertion (no semicolons).
        "boss"          : false,     //Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
        "debug"         : false,     //Allow debugger statements e.g. browser breakpoints.
        "eqnull"        : false,     //Tolerate use of `== null`.
        "es5"           : true,      //Allow EcmaScript 5 syntax.
        "esnext"        : true,      //Allow ES.next specific features such as `const` and `let`.
        "evil"          : false,     //Tolerate use of `eval`.
        "expr"          : false,     //Tolerate `ExpressionStatement` as Programs.
        "funcscope"     : false,     //Tolerate declarations of variables inside of control structures while accessing them later from the outside.
        "globalstrict"  : false,     //Allow global "use strict" (also enables 'strict').
        "iterator"      : false,     //Allow usage of __iterator__ property.
        "lastsemic"     : false,     //Tolerat missing semicolons when the it is omitted for the last statement in a one-line block.
        "laxbreak"      : false,     //Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
        "laxcomma"      : false,     //Suppress warnings about comma-first coding style.
        "loopfunc"      : false,     //Allow functions to be defined within loops.
        "multistr"      : false,     //Tolerate multi-line strings.
        "onecase"       : false,     //Tolerate switches with just one case.
        "proto"         : false,     //Tolerate __proto__ property. This property is deprecated.
        "regexdash"     : false,     //Tolerate unescaped last dash i.e. `[-...]`.
        "scripturl"     : false,     //Tolerate script-targeted URLs.
        "smarttabs"     : true,      //Tolerate mixed tabs and spaces when the latter are used for alignment only.
        "shadow"        : false,     //Allows re-define variables later in code e.g. `var x=1; x=2;`.
        "sub"           : false,     //Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
        "supernew"      : false,     //Tolerate `new function () { ... };` and `new Object;`.
        "validthis"     : false,     //Tolerate strict violations when the code is running in strict mode and you use this in a non-constructor function.

        //== Environments ====================================================

        //These options pre-define global variables that are exposed by
        //popular JavaScript libraries and runtime environmentsâ€”such as
        //browser or node.js.

        "browser"       : true,      //Standard browser globals e.g. `window`, `document`.
        "couch"         : false,     //Enable globals exposed by CouchDB.
        "devel"         : false,     //Allow development statements e.g. `console.log();`.
        "dojo"          : false,     //Enable globals exposed by Dojo Toolkit.
        "jquery"        : false,     //Enable globals exposed by jQuery JavaScript library.
        "mootools"      : false,     //Enable globals exposed by MooTools JavaScript framework.
        "node"          : true,      //Enable globals available when code is running inside of the NodeJS runtime environment.
        "nonstandard"   : false,     //Define non-standard but widely adopted globals such as escape and unescape.
        "prototypejs"   : false,     //Enable globals exposed by Prototype JavaScript framework.
        "rhino"         : false,     //Enable globals available when your code is running inside of the Rhino runtime environment.
        "wsh"           : false,     //Enable globals available when your code is running as a script for the Windows Script Host.

        // == Undocumented Options ============================================

        "maxerr" :100,
        "predef" : [],
        "globals" : {
            "angular" : false
        },
        "indent" : 4
}
